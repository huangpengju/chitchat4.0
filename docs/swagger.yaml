basePath: /
definitions:
  common.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  model.AuthUser:
    properties:
      authCode:
        type: string
      authType:
        type: string
      name:
        type: string
      password:
        type: string
      setCookie:
        type: boolean
    type: object
  model.CreatedUser:
    properties:
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  model.JWTToken:
    properties:
      describe:
        type: string
      token:
        type: string
    type: object
  model.Operation:
    enum:
    - '*'
    - edit
    - view
    type: string
    x-enum-comments:
      AllOperation: 所有操作
      EditOperation: 编辑操作
      ViewOperation: 查看操作
    x-enum-varnames:
    - AllOperation
    - EditOperation
    - ViewOperation
  model.Role:
    properties:
      id:
        type: integer
      name:
        type: string
      namespace:
        description: 表示命名空间
        type: string
      rules:
        description: Rules 表示规则集合，是切片类型
        items:
          $ref: '#/definitions/model.Rule'
        type: array
      scope:
        allOf:
        - $ref: '#/definitions/model.Scope'
        description: Scope 表示范围，string类型
    type: object
  model.Rule:
    properties:
      operation:
        allOf:
        - $ref: '#/definitions/model.Operation'
        description: 操作
      resource:
        description: 资源
        type: string
    type: object
  model.Scope:
    enum:
    - cluster
    - namespace
    type: string
    x-enum-comments:
      ClusterScope: 串范围
      NamespaceScope: 命名空间范围
    x-enum-varnames:
    - ClusterScope
    - NamespaceScope
  model.UpdatedUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  model.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: 作者：黄鹏举
    url: https://huangpengju.github.io/
  description: |-
    这是 chitchat 服务器 API 文档。
    查看应用版本：项目启动命令后追加-v=true
    指定应用配置路径：项目启动命令后追加-config=配置路径
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ChitChat API
  version: "4.0"
paths:
  /api/v1/auth/token:
    post:
      consumes:
      - application/json
      description: user login | 用户登录
      parameters:
      - description: auth user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.AuthUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.JWTToken'
              type: object
      summary: Login | 登录
      tags:
      - auth
  /api/v1/auth/user:
    post:
      consumes:
      - application/json
      description: Create user and storage
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.CreatedUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      summary: Register user | 注册用户
      tags:
      - auth
  /api/v1/roles:
    post:
      consumes:
      - application/json
      description: Create rbac role | 创建 rbac 的角色
      parameters:
      - description: rbac role info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Response'
      security:
      - JWT: []
      summary: Create rbac role
      tags:
      - rbac
  /api/v1/users:
    get:
      description: 获取用户列表并存储
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
      security:
      - JWT: []
      summary: List user | 用户列表
      tags:
      - user
    post:
      consumes:
      - application/json
      description: 创建用户并存储
      parameters:
      - description: user 信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.CreatedUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - JWT: []
      summary: Create user | 创建用户
      tags:
      - user
  /api/v1/users/{id}:
    get:
      description: 获取用户并保存
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - JWT: []
      summary: Get user | 获取单个用户
      tags:
      - user
    put:
      consumes:
      - application/json
      description: 修改用户信息并保存
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdatedUser'
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - JWT: []
      summary: Update user | 修改用户信息
      tags:
      - user
  /index:
    get:
      description: 返回后端主页 html 源代码
      produces:
      - text/html
      responses: {}
      summary: Home
      tags:
      - home
schemes:
- http
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
